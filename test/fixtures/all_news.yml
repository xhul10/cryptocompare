---
http_interactions:
- request:
    method: get
    uri: https://min-api.cryptocompare.com/data/news/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.13.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.10.3
      Date:
      - Tue, 06 Mar 2018 08:24:29 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Headers:
      - Content-Type
      Cache-Control:
      - public, max-age=29
      Cryptocompare-Cache-Hit:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 06 Mar 2018 08:24:28 GMT
recorded_with: VCR 3.0.3
